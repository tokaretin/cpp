/*Задача 2
Что нужно сделать
Кролик сидит на нулевой ступеньке большой лестницы. Он может прыгать на одну или более ступенек вверх,
 но не далее чем на k. Кролик хочет допрыгать до n-й ступеньки, но может сделать это большим количеством способов.

Напишите рекурсивную функцию, которая принимает число n типа int и число k — максимальную длину прыжка,
а возвращает количество способов, которым кролик может доскакать до n-й ступеньки. В функции для аргумента
 “максимальная длина прыжка” задать значение, по умолчанию равное 3.

Пример:

Ввод: 3, 2

Вывод: 3


Пояснение: (1,2), (2,1), (1,1,1)

Чек-лист для проверки задачи

Функция принимает корректные типы данных, тип возвращаемого значения —  int.
Функция не использует библиотек кроме <iostream>.
Функция рекурсивная.
Функция содержит значение по умолчанию.*/

#include <iostream>

int jumpWay(int n_steps, int k_maxJumps = 3)
{
    if (n_steps <= 1) // Если кролик находится на ступеньке 0 или 1, то это один способ.
    {
        return 1;
    }

    int jump = 0;
    for (int i = 1; i <= n_steps && i <= k_maxJumps; i++) // / Перебираем прыжки от 1 до максимальной длины прыжка (k_maxJumps) или до n_steps
    {
        jump += jumpWay(n_steps - i, k_maxJumps); // Рекурсивно вызываем jumpWays для оставшихся ступенек
    }

    return jump;
}

int main()
{
    while (true)
    {
        int n = 3, kmax;
        std::cout << "Enter the number of steps: ";
        std::cin >> n;
        std::cout << "Enter the max number of jumps: ";
        std::cin >> kmax;

        std::cout << "Number of jumps: " << jumpWay(n, kmax) << std::endl;
    }

    return 0;
}